/*
 * generated by Xtext 2.19.0
 */
grammar InternalHTMLbuild;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.HTMLbuildGrammarAccess;

}
@parser::members {
	private HTMLbuildGrammarAccess grammarAccess;

	public void setGrammarAccess(HTMLbuildGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
		(rule__Model__ElementsAssignment)*
		{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStyle
entryRuleStyle
:
{ before(grammarAccess.getStyleRule()); }
	 ruleStyle
{ after(grammarAccess.getStyleRule()); } 
	 EOF 
;

// Rule Style
ruleStyle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStyleAccess().getGroup()); }
		(rule__Style__Group__0)
		{ after(grammarAccess.getStyleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContent
entryRuleContent
:
{ before(grammarAccess.getContentRule()); }
	 ruleContent
{ after(grammarAccess.getContentRule()); } 
	 EOF 
;

// Rule Content
ruleContent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContentAccess().getAlternatives()); }
		(rule__Content__Alternatives)
		{ after(grammarAccess.getContentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextAccess().getGroup()); }
		(rule__Text__Group__0)
		{ after(grammarAccess.getTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImage
entryRuleImage
:
{ before(grammarAccess.getImageRule()); }
	 ruleImage
{ after(grammarAccess.getImageRule()); } 
	 EOF 
;

// Rule Image
ruleImage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImageAccess().getGroup()); }
		(rule__Image__Group__0)
		{ after(grammarAccess.getImageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLink
entryRuleLink
:
{ before(grammarAccess.getLinkRule()); }
	 ruleLink
{ after(grammarAccess.getLinkRule()); } 
	 EOF 
;

// Rule Link
ruleLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkAccess().getGroup()); }
		(rule__Link__Group__0)
		{ after(grammarAccess.getLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiv
entryRuleDiv
:
{ before(grammarAccess.getDivRule()); }
	 ruleDiv
{ after(grammarAccess.getDivRule()); } 
	 EOF 
;

// Rule Div
ruleDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDivAccess().getGroup()); }
		(rule__Div__Group__0)
		{ after(grammarAccess.getDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSeparator
entryRuleSeparator
:
{ before(grammarAccess.getSeparatorRule()); }
	 ruleSeparator
{ after(grammarAccess.getSeparatorRule()); } 
	 EOF 
;

// Rule Separator
ruleSeparator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSeparatorAccess().getAlternatives()); }
		(rule__Separator__Alternatives)
		{ after(grammarAccess.getSeparatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNext
entryRuleNext
:
{ before(grammarAccess.getNextRule()); }
	 ruleNext
{ after(grammarAccess.getNextRule()); } 
	 EOF 
;

// Rule Next
ruleNext 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNextAccess().getGroup()); }
		(rule__Next__Group__0)
		{ after(grammarAccess.getNextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThen
entryRuleThen
:
{ before(grammarAccess.getThenRule()); }
	 ruleThen
{ after(grammarAccess.getThenRule()); } 
	 EOF 
;

// Rule Then
ruleThen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThenAccess().getGroup()); }
		(rule__Then__Group__0)
		{ after(grammarAccess.getThenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getStyleParserRuleCall_0()); }
		ruleStyle
		{ after(grammarAccess.getTypeAccess().getStyleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getContentParserRuleCall_1()); }
		ruleContent
		{ after(grammarAccess.getTypeAccess().getContentParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDivParserRuleCall_2()); }
		ruleDiv
		{ after(grammarAccess.getTypeAccess().getDivParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStyleAccess().getLinkAssignment_3_0()); }
		(rule__Style__LinkAssignment_3_0)
		{ after(grammarAccess.getStyleAccess().getLinkAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getStyleAccess().getNewlinkAssignment_3_1()); }
		(rule__Style__NewlinkAssignment_3_1)
		{ after(grammarAccess.getStyleAccess().getNewlinkAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContentAccess().getTextParserRuleCall_0()); }
		ruleText
		{ after(grammarAccess.getContentAccess().getTextParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getContentAccess().getImageParserRuleCall_1()); }
		ruleImage
		{ after(grammarAccess.getContentAccess().getImageParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getContentAccess().getLinkParserRuleCall_2()); }
		ruleLink
		{ after(grammarAccess.getContentAccess().getLinkParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getH1Assignment_4_0()); }
		(rule__Text__H1Assignment_4_0)
		{ after(grammarAccess.getTextAccess().getH1Assignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getTextAccess().getH2Assignment_4_1()); }
		(rule__Text__H2Assignment_4_1)
		{ after(grammarAccess.getTextAccess().getH2Assignment_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getTextAccess().getH3Assignment_4_2()); }
		(rule__Text__H3Assignment_4_2)
		{ after(grammarAccess.getTextAccess().getH3Assignment_4_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageAccess().getLinkAssignment_3_0()); }
		(rule__Image__LinkAssignment_3_0)
		{ after(grammarAccess.getImageAccess().getLinkAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getImageAccess().getNewlinkAssignment_3_1()); }
		(rule__Image__NewlinkAssignment_3_1)
		{ after(grammarAccess.getImageAccess().getNewlinkAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getAddressAssignment_3_0()); }
		(rule__Link__AddressAssignment_3_0)
		{ after(grammarAccess.getLinkAccess().getAddressAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getLinkAccess().getAnchorAssignment_3_1()); }
		(rule__Link__AnchorAssignment_3_1)
		{ after(grammarAccess.getLinkAccess().getAnchorAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives_0()); }
		(rule__Element__Alternatives_0)
		{ after(grammarAccess.getElementAccess().getAlternatives_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getElemAssignment_1()); }
		(rule__Element__ElemAssignment_1)
		{ after(grammarAccess.getElementAccess().getElemAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getContentParserRuleCall_0_0()); }
		ruleContent
		{ after(grammarAccess.getElementAccess().getContentParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getDivParserRuleCall_0_1()); }
		ruleDiv
		{ after(grammarAccess.getElementAccess().getDivParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Separator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSeparatorAccess().getNextParserRuleCall_0()); }
		ruleNext
		{ after(grammarAccess.getSeparatorAccess().getNextParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSeparatorAccess().getThenParserRuleCall_1()); }
		ruleThen
		{ after(grammarAccess.getSeparatorAccess().getThenParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Style__Group__0__Impl
	rule__Style__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStyleAccess().getStyleKeyword_0()); }
	'Style'
	{ after(grammarAccess.getStyleAccess().getStyleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Style__Group__1__Impl
	rule__Style__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStyleAccess().getStyle_idAssignment_1()); }
	(rule__Style__Style_idAssignment_1)
	{ after(grammarAccess.getStyleAccess().getStyle_idAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Style__Group__2__Impl
	rule__Style__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStyleAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getStyleAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Style__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStyleAccess().getAlternatives_3()); }
	(rule__Style__Alternatives_3)
	{ after(grammarAccess.getStyleAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__0__Impl
	rule__Text__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getTextAction_0()); }
	()
	{ after(grammarAccess.getTextAccess().getTextAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__1__Impl
	rule__Text__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getTextKeyword_1()); }
	'Text'
	{ after(grammarAccess.getTextAccess().getTextKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__2__Impl
	rule__Text__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getNameAssignment_2()); }
	(rule__Text__NameAssignment_2)?
	{ after(grammarAccess.getTextAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__3__Impl
	rule__Text__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getTextAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__4__Impl
	rule__Text__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getAlternatives_4()); }
	(rule__Text__Alternatives_4)?
	{ after(grammarAccess.getTextAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getSTRINGTerminalRuleCall_5()); }
	RULE_STRING
	{ after(grammarAccess.getTextAccess().getSTRINGTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Image__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__0__Impl
	rule__Image__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getImageKeyword_0()); }
	'Image'
	{ after(grammarAccess.getImageAccess().getImageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__1__Impl
	rule__Image__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getNameAssignment_1()); }
	(rule__Image__NameAssignment_1)
	{ after(grammarAccess.getImageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__2__Impl
	rule__Image__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getImageAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getAlternatives_3()); }
	(rule__Image__Alternatives_3)
	{ after(grammarAccess.getImageAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__0__Impl
	rule__Link__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getLinkKeyword_0()); }
	'Link'
	{ after(grammarAccess.getLinkAccess().getLinkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__1__Impl
	rule__Link__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getNameAssignment_1()); }
	(rule__Link__NameAssignment_1)?
	{ after(grammarAccess.getLinkAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__2__Impl
	rule__Link__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getLinkAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__3__Impl
	rule__Link__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getAlternatives_3()); }
	(rule__Link__Alternatives_3)
	{ after(grammarAccess.getLinkAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getGroup_4()); }
	(rule__Link__Group_4__0)?
	{ after(grammarAccess.getLinkAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_4__0__Impl
	rule__Link__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getLinktextKeyword_4_0()); }
	'linktext'
	{ after(grammarAccess.getLinkAccess().getLinktextKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getLinktextAssignment_4_1()); }
	(rule__Link__LinktextAssignment_4_1)
	{ after(grammarAccess.getLinkAccess().getLinktextAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Div__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Div__Group__0__Impl
	rule__Div__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivAccess().getDiv_idAssignment_0()); }
	(rule__Div__Div_idAssignment_0)?
	{ after(grammarAccess.getDivAccess().getDiv_idAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Div__Group__1__Impl
	rule__Div__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDivAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Div__Group__2__Impl
	rule__Div__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivAccess().getDivelementsAssignment_2()); }
	(rule__Div__DivelementsAssignment_2)
	{ after(grammarAccess.getDivAccess().getDivelementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Div__Group__3__Impl
	rule__Div__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivAccess().getGroup_3()); }
	(rule__Div__Group_3__0)*
	{ after(grammarAccess.getDivAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Div__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getDivAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Div__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Div__Group_3__0__Impl
	rule__Div__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivAccess().getSeparatorsAssignment_3_0()); }
	(rule__Div__SeparatorsAssignment_3_0)
	{ after(grammarAccess.getDivAccess().getSeparatorsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Div__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivAccess().getDivelementsAssignment_3_1()); }
	(rule__Div__DivelementsAssignment_3_1)
	{ after(grammarAccess.getDivAccess().getDivelementsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Next__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Next__Group__0__Impl
	rule__Next__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextAccess().getNextAction_0()); }
	()
	{ after(grammarAccess.getNextAccess().getNextAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Next__Group__1__Impl
	rule__Next__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextAccess().getNextKeyword_1()); }
	'<next'
	{ after(grammarAccess.getNextAccess().getNextKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Next__Group__2__Impl
	rule__Next__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextAccess().getGroup_2()); }
	(rule__Next__Group_2__0)?
	{ after(grammarAccess.getNextAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Next__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getNextAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Next__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Next__Group_2__0__Impl
	rule__Next__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextAccess().getHasratioAssignment_2_0()); }
	(rule__Next__HasratioAssignment_2_0)
	{ after(grammarAccess.getNextAccess().getHasratioAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Next__Group_2__1__Impl
	rule__Next__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextAccess().getGroup_2_1()); }
	(rule__Next__Group_2_1__0)?
	{ after(grammarAccess.getNextAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Next__Group_2__2__Impl
	rule__Next__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextAccess().getRatiosAssignment_2_2()); }
	(rule__Next__RatiosAssignment_2_2)
	{ after(grammarAccess.getNextAccess().getRatiosAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Next__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getNextAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Next__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Next__Group_2_1__0__Impl
	rule__Next__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextAccess().getRatiosAssignment_2_1_0()); }
	(rule__Next__RatiosAssignment_2_1_0)
	{ after(grammarAccess.getNextAccess().getRatiosAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Next__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextAccess().getSolidusKeyword_2_1_1()); }
	'/'
	{ after(grammarAccess.getNextAccess().getSolidusKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Then__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__0__Impl
	rule__Then__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getThenAction_0()); }
	()
	{ after(grammarAccess.getThenAccess().getThenAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__1__Impl
	rule__Then__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getThenKeyword_1()); }
	'<then'
	{ after(grammarAccess.getThenAccess().getThenKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__2__Impl
	rule__Then__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getGroup_2()); }
	(rule__Then__Group_2__0)?
	{ after(grammarAccess.getThenAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getThenAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Then__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group_2__0__Impl
	rule__Then__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getHasratioAssignment_2_0()); }
	(rule__Then__HasratioAssignment_2_0)
	{ after(grammarAccess.getThenAccess().getHasratioAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group_2__1__Impl
	rule__Then__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getGroup_2_1()); }
	(rule__Then__Group_2_1__0)?
	{ after(grammarAccess.getThenAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group_2__2__Impl
	rule__Then__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getRatiosAssignment_2_2()); }
	(rule__Then__RatiosAssignment_2_2)
	{ after(grammarAccess.getThenAccess().getRatiosAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getThenAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Then__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group_2_1__0__Impl
	rule__Then__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getRatiosAssignment_2_1_0()); }
	(rule__Then__RatiosAssignment_2_1_0)
	{ after(grammarAccess.getThenAccess().getRatiosAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getSolidusKeyword_2_1_1()); }
	'/'
	{ after(grammarAccess.getThenAccess().getSolidusKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getModelAccess().getElementsTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Style_idAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStyleAccess().getStyle_idIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStyleAccess().getStyle_idIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__LinkAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStyleAccess().getLinkLinkCrossReference_3_0_0()); }
		(
			{ before(grammarAccess.getStyleAccess().getLinkLinkIDTerminalRuleCall_3_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStyleAccess().getLinkLinkIDTerminalRuleCall_3_0_0_1()); }
		)
		{ after(grammarAccess.getStyleAccess().getLinkLinkCrossReference_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__NewlinkAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStyleAccess().getNewlinkLinkParserRuleCall_3_1_0()); }
		ruleLink
		{ after(grammarAccess.getStyleAccess().getNewlinkLinkParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTextAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__H1Assignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getH1NumberSignKeyword_4_0_0()); }
		(
			{ before(grammarAccess.getTextAccess().getH1NumberSignKeyword_4_0_0()); }
			'#'
			{ after(grammarAccess.getTextAccess().getH1NumberSignKeyword_4_0_0()); }
		)
		{ after(grammarAccess.getTextAccess().getH1NumberSignKeyword_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__H2Assignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getH2NumberSignNumberSignKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getTextAccess().getH2NumberSignNumberSignKeyword_4_1_0()); }
			'##'
			{ after(grammarAccess.getTextAccess().getH2NumberSignNumberSignKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getTextAccess().getH2NumberSignNumberSignKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__H3Assignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getH3NumberSignNumberSignNumberSignKeyword_4_2_0()); }
		(
			{ before(grammarAccess.getTextAccess().getH3NumberSignNumberSignNumberSignKeyword_4_2_0()); }
			'###'
			{ after(grammarAccess.getTextAccess().getH3NumberSignNumberSignNumberSignKeyword_4_2_0()); }
		)
		{ after(grammarAccess.getTextAccess().getH3NumberSignNumberSignNumberSignKeyword_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getImageAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__LinkAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageAccess().getLinkLinkCrossReference_3_0_0()); }
		(
			{ before(grammarAccess.getImageAccess().getLinkLinkIDTerminalRuleCall_3_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getImageAccess().getLinkLinkIDTerminalRuleCall_3_0_0_1()); }
		)
		{ after(grammarAccess.getImageAccess().getLinkLinkCrossReference_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__NewlinkAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageAccess().getNewlinkLinkParserRuleCall_3_1_0()); }
		ruleLink
		{ after(grammarAccess.getImageAccess().getNewlinkLinkParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLinkAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__AddressAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getAddressSTRINGTerminalRuleCall_3_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getLinkAccess().getAddressSTRINGTerminalRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__AnchorAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getAnchorContentCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getLinkAccess().getAnchorContentIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLinkAccess().getAnchorContentIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getLinkAccess().getAnchorContentCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__LinktextAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getLinktextSTRINGTerminalRuleCall_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getLinkAccess().getLinktextSTRINGTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__ElemAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getElemContentCrossReference_1_0()); }
		(
			{ before(grammarAccess.getElementAccess().getElemContentIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getElementAccess().getElemContentIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getElementAccess().getElemContentCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Div_idAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivAccess().getDiv_idIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getDivAccess().getDiv_idIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__DivelementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivAccess().getDivelementsElementParserRuleCall_2_0()); }
		ruleElement
		{ after(grammarAccess.getDivAccess().getDivelementsElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__SeparatorsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivAccess().getSeparatorsSeparatorParserRuleCall_3_0_0()); }
		ruleSeparator
		{ after(grammarAccess.getDivAccess().getSeparatorsSeparatorParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__DivelementsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivAccess().getDivelementsElementParserRuleCall_3_1_0()); }
		ruleElement
		{ after(grammarAccess.getDivAccess().getDivelementsElementParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__HasratioAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNextAccess().getHasratioLeftParenthesisKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getNextAccess().getHasratioLeftParenthesisKeyword_2_0_0()); }
			'('
			{ after(grammarAccess.getNextAccess().getHasratioLeftParenthesisKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getNextAccess().getHasratioLeftParenthesisKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__RatiosAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNextAccess().getRatiosINTTerminalRuleCall_2_1_0_0()); }
		RULE_INT
		{ after(grammarAccess.getNextAccess().getRatiosINTTerminalRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Next__RatiosAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNextAccess().getRatiosINTTerminalRuleCall_2_2_0()); }
		RULE_INT
		{ after(grammarAccess.getNextAccess().getRatiosINTTerminalRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__HasratioAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getHasratioLeftParenthesisKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getThenAccess().getHasratioLeftParenthesisKeyword_2_0_0()); }
			'('
			{ after(grammarAccess.getThenAccess().getHasratioLeftParenthesisKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getThenAccess().getHasratioLeftParenthesisKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__RatiosAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getRatiosINTTerminalRuleCall_2_1_0_0()); }
		RULE_INT
		{ after(grammarAccess.getThenAccess().getRatiosINTTerminalRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__RatiosAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getRatiosINTTerminalRuleCall_2_2_0()); }
		RULE_INT
		{ after(grammarAccess.getThenAccess().getRatiosINTTerminalRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
