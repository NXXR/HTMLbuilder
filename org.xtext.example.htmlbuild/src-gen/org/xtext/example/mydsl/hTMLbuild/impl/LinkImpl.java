/**
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.hTMLbuild.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.hTMLbuild.Content;
import org.xtext.example.mydsl.hTMLbuild.HTMLbuildPackage;
import org.xtext.example.mydsl.hTMLbuild.Link;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Link</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.hTMLbuild.impl.LinkImpl#getAddress <em>Address</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.hTMLbuild.impl.LinkImpl#getAnchor <em>Anchor</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.hTMLbuild.impl.LinkImpl#getLinktext <em>Linktext</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LinkImpl extends ContentImpl implements Link
{
  /**
   * The default value of the '{@link #getAddress() <em>Address</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAddress()
   * @generated
   * @ordered
   */
  protected static final String ADDRESS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAddress() <em>Address</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAddress()
   * @generated
   * @ordered
   */
  protected String address = ADDRESS_EDEFAULT;

  /**
   * The cached value of the '{@link #getAnchor() <em>Anchor</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnchor()
   * @generated
   * @ordered
   */
  protected Content anchor;

  /**
   * The default value of the '{@link #getLinktext() <em>Linktext</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLinktext()
   * @generated
   * @ordered
   */
  protected static final String LINKTEXT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLinktext() <em>Linktext</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLinktext()
   * @generated
   * @ordered
   */
  protected String linktext = LINKTEXT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LinkImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HTMLbuildPackage.Literals.LINK;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAddress()
  {
    return address;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAddress(String newAddress)
  {
    String oldAddress = address;
    address = newAddress;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HTMLbuildPackage.LINK__ADDRESS, oldAddress, address));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Content getAnchor()
  {
    if (anchor != null && anchor.eIsProxy())
    {
      InternalEObject oldAnchor = (InternalEObject)anchor;
      anchor = (Content)eResolveProxy(oldAnchor);
      if (anchor != oldAnchor)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, HTMLbuildPackage.LINK__ANCHOR, oldAnchor, anchor));
      }
    }
    return anchor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Content basicGetAnchor()
  {
    return anchor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAnchor(Content newAnchor)
  {
    Content oldAnchor = anchor;
    anchor = newAnchor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HTMLbuildPackage.LINK__ANCHOR, oldAnchor, anchor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLinktext()
  {
    return linktext;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLinktext(String newLinktext)
  {
    String oldLinktext = linktext;
    linktext = newLinktext;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HTMLbuildPackage.LINK__LINKTEXT, oldLinktext, linktext));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HTMLbuildPackage.LINK__ADDRESS:
        return getAddress();
      case HTMLbuildPackage.LINK__ANCHOR:
        if (resolve) return getAnchor();
        return basicGetAnchor();
      case HTMLbuildPackage.LINK__LINKTEXT:
        return getLinktext();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HTMLbuildPackage.LINK__ADDRESS:
        setAddress((String)newValue);
        return;
      case HTMLbuildPackage.LINK__ANCHOR:
        setAnchor((Content)newValue);
        return;
      case HTMLbuildPackage.LINK__LINKTEXT:
        setLinktext((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HTMLbuildPackage.LINK__ADDRESS:
        setAddress(ADDRESS_EDEFAULT);
        return;
      case HTMLbuildPackage.LINK__ANCHOR:
        setAnchor((Content)null);
        return;
      case HTMLbuildPackage.LINK__LINKTEXT:
        setLinktext(LINKTEXT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HTMLbuildPackage.LINK__ADDRESS:
        return ADDRESS_EDEFAULT == null ? address != null : !ADDRESS_EDEFAULT.equals(address);
      case HTMLbuildPackage.LINK__ANCHOR:
        return anchor != null;
      case HTMLbuildPackage.LINK__LINKTEXT:
        return LINKTEXT_EDEFAULT == null ? linktext != null : !LINKTEXT_EDEFAULT.equals(linktext);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (address: ");
    result.append(address);
    result.append(", linktext: ");
    result.append(linktext);
    result.append(')');
    return result.toString();
  }

} //LinkImpl
