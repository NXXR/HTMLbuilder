/**
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.hTMLbuild.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.hTMLbuild.HTMLbuildPackage;
import org.xtext.example.mydsl.hTMLbuild.Text;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Text</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.hTMLbuild.impl.TextImpl#isH1 <em>H1</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.hTMLbuild.impl.TextImpl#isH2 <em>H2</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.hTMLbuild.impl.TextImpl#isH3 <em>H3</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TextImpl extends ContentImpl implements Text
{
  /**
   * The default value of the '{@link #isH1() <em>H1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isH1()
   * @generated
   * @ordered
   */
  protected static final boolean H1_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isH1() <em>H1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isH1()
   * @generated
   * @ordered
   */
  protected boolean h1 = H1_EDEFAULT;

  /**
   * The default value of the '{@link #isH2() <em>H2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isH2()
   * @generated
   * @ordered
   */
  protected static final boolean H2_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isH2() <em>H2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isH2()
   * @generated
   * @ordered
   */
  protected boolean h2 = H2_EDEFAULT;

  /**
   * The default value of the '{@link #isH3() <em>H3</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isH3()
   * @generated
   * @ordered
   */
  protected static final boolean H3_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isH3() <em>H3</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isH3()
   * @generated
   * @ordered
   */
  protected boolean h3 = H3_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TextImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HTMLbuildPackage.Literals.TEXT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isH1()
  {
    return h1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setH1(boolean newH1)
  {
    boolean oldH1 = h1;
    h1 = newH1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HTMLbuildPackage.TEXT__H1, oldH1, h1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isH2()
  {
    return h2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setH2(boolean newH2)
  {
    boolean oldH2 = h2;
    h2 = newH2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HTMLbuildPackage.TEXT__H2, oldH2, h2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isH3()
  {
    return h3;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setH3(boolean newH3)
  {
    boolean oldH3 = h3;
    h3 = newH3;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HTMLbuildPackage.TEXT__H3, oldH3, h3));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HTMLbuildPackage.TEXT__H1:
        return isH1();
      case HTMLbuildPackage.TEXT__H2:
        return isH2();
      case HTMLbuildPackage.TEXT__H3:
        return isH3();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HTMLbuildPackage.TEXT__H1:
        setH1((Boolean)newValue);
        return;
      case HTMLbuildPackage.TEXT__H2:
        setH2((Boolean)newValue);
        return;
      case HTMLbuildPackage.TEXT__H3:
        setH3((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HTMLbuildPackage.TEXT__H1:
        setH1(H1_EDEFAULT);
        return;
      case HTMLbuildPackage.TEXT__H2:
        setH2(H2_EDEFAULT);
        return;
      case HTMLbuildPackage.TEXT__H3:
        setH3(H3_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HTMLbuildPackage.TEXT__H1:
        return h1 != H1_EDEFAULT;
      case HTMLbuildPackage.TEXT__H2:
        return h2 != H2_EDEFAULT;
      case HTMLbuildPackage.TEXT__H3:
        return h3 != H3_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (h1: ");
    result.append(h1);
    result.append(", h2: ");
    result.append(h2);
    result.append(", h3: ");
    result.append(h3);
    result.append(')');
    return result.toString();
  }

} //TextImpl
