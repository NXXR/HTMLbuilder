/**
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.hTMLbuild.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.hTMLbuild.HTMLbuildPackage;
import org.xtext.example.mydsl.hTMLbuild.Link;
import org.xtext.example.mydsl.hTMLbuild.Style;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Style</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.hTMLbuild.impl.StyleImpl#getStyle_id <em>Style id</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.hTMLbuild.impl.StyleImpl#getLink <em>Link</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.hTMLbuild.impl.StyleImpl#getNewlink <em>Newlink</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StyleImpl extends TypeImpl implements Style
{
  /**
   * The default value of the '{@link #getStyle_id() <em>Style id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStyle_id()
   * @generated
   * @ordered
   */
  protected static final String STYLE_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStyle_id() <em>Style id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStyle_id()
   * @generated
   * @ordered
   */
  protected String style_id = STYLE_ID_EDEFAULT;

  /**
   * The cached value of the '{@link #getLink() <em>Link</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLink()
   * @generated
   * @ordered
   */
  protected Link link;

  /**
   * The cached value of the '{@link #getNewlink() <em>Newlink</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNewlink()
   * @generated
   * @ordered
   */
  protected Link newlink;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StyleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HTMLbuildPackage.Literals.STYLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStyle_id()
  {
    return style_id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStyle_id(String newStyle_id)
  {
    String oldStyle_id = style_id;
    style_id = newStyle_id;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HTMLbuildPackage.STYLE__STYLE_ID, oldStyle_id, style_id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Link getLink()
  {
    if (link != null && link.eIsProxy())
    {
      InternalEObject oldLink = (InternalEObject)link;
      link = (Link)eResolveProxy(oldLink);
      if (link != oldLink)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, HTMLbuildPackage.STYLE__LINK, oldLink, link));
      }
    }
    return link;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Link basicGetLink()
  {
    return link;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLink(Link newLink)
  {
    Link oldLink = link;
    link = newLink;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HTMLbuildPackage.STYLE__LINK, oldLink, link));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Link getNewlink()
  {
    return newlink;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNewlink(Link newNewlink, NotificationChain msgs)
  {
    Link oldNewlink = newlink;
    newlink = newNewlink;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, HTMLbuildPackage.STYLE__NEWLINK, oldNewlink, newNewlink);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNewlink(Link newNewlink)
  {
    if (newNewlink != newlink)
    {
      NotificationChain msgs = null;
      if (newlink != null)
        msgs = ((InternalEObject)newlink).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - HTMLbuildPackage.STYLE__NEWLINK, null, msgs);
      if (newNewlink != null)
        msgs = ((InternalEObject)newNewlink).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - HTMLbuildPackage.STYLE__NEWLINK, null, msgs);
      msgs = basicSetNewlink(newNewlink, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HTMLbuildPackage.STYLE__NEWLINK, newNewlink, newNewlink));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case HTMLbuildPackage.STYLE__NEWLINK:
        return basicSetNewlink(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HTMLbuildPackage.STYLE__STYLE_ID:
        return getStyle_id();
      case HTMLbuildPackage.STYLE__LINK:
        if (resolve) return getLink();
        return basicGetLink();
      case HTMLbuildPackage.STYLE__NEWLINK:
        return getNewlink();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HTMLbuildPackage.STYLE__STYLE_ID:
        setStyle_id((String)newValue);
        return;
      case HTMLbuildPackage.STYLE__LINK:
        setLink((Link)newValue);
        return;
      case HTMLbuildPackage.STYLE__NEWLINK:
        setNewlink((Link)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HTMLbuildPackage.STYLE__STYLE_ID:
        setStyle_id(STYLE_ID_EDEFAULT);
        return;
      case HTMLbuildPackage.STYLE__LINK:
        setLink((Link)null);
        return;
      case HTMLbuildPackage.STYLE__NEWLINK:
        setNewlink((Link)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HTMLbuildPackage.STYLE__STYLE_ID:
        return STYLE_ID_EDEFAULT == null ? style_id != null : !STYLE_ID_EDEFAULT.equals(style_id);
      case HTMLbuildPackage.STYLE__LINK:
        return link != null;
      case HTMLbuildPackage.STYLE__NEWLINK:
        return newlink != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (style_id: ");
    result.append(style_id);
    result.append(')');
    return result.toString();
  }

} //StyleImpl
