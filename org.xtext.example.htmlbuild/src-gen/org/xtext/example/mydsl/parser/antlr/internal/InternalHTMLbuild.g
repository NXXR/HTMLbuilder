/*
 * generated by Xtext 2.19.0
 */
grammar InternalHTMLbuild;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.HTMLbuildGrammarAccess;

}

@parser::members {

 	private HTMLbuildGrammarAccess grammarAccess;

    public InternalHTMLbuildParser(TokenStream input, HTMLbuildGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected HTMLbuildGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getElementsTypeParserRuleCall_0());
			}
			lv_elements_0_0=ruleType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"org.xtext.example.mydsl.HTMLbuild.Type");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getStyleParserRuleCall_0());
		}
		this_Style_0=ruleStyle
		{
			$current = $this_Style_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getContentParserRuleCall_1());
		}
		this_Content_1=ruleContent
		{
			$current = $this_Content_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getDivParserRuleCall_2());
		}
		this_Div_2=ruleDiv
		{
			$current = $this_Div_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStyle
entryRuleStyle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStyleRule()); }
	iv_ruleStyle=ruleStyle
	{ $current=$iv_ruleStyle.current; }
	EOF;

// Rule Style
ruleStyle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Style'
		{
			newLeafNode(otherlv_0, grammarAccess.getStyleAccess().getStyleKeyword_0());
		}
		(
			(
				lv_style_id_1_0=RULE_ID
				{
					newLeafNode(lv_style_id_1_0, grammarAccess.getStyleAccess().getStyle_idIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStyleRule());
					}
					setWithLastConsumed(
						$current,
						"style_id",
						lv_style_id_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getStyleAccess().getColonKeyword_2());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStyleRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getStyleAccess().getLinkLinkCrossReference_3_0_0());
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStyleAccess().getNewlinkLinkParserRuleCall_3_1_0());
					}
					lv_newlink_4_0=ruleLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStyleRule());
						}
						set(
							$current,
							"newlink",
							lv_newlink_4_0,
							"org.xtext.example.mydsl.HTMLbuild.Link");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleContent
entryRuleContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentRule()); }
	iv_ruleContent=ruleContent
	{ $current=$iv_ruleContent.current; }
	EOF;

// Rule Content
ruleContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getContentAccess().getTextParserRuleCall_0());
		}
		this_Text_0=ruleText
		{
			$current = $this_Text_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentAccess().getImageParserRuleCall_1());
		}
		this_Image_1=ruleImage
		{
			$current = $this_Image_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentAccess().getLinkParserRuleCall_2());
		}
		this_Link_2=ruleLink
		{
			$current = $this_Link_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleText
entryRuleText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current; }
	EOF;

// Rule Text
ruleText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTextAccess().getTextAction_0(),
					$current);
			}
		)
		otherlv_1='Text'
		{
			newLeafNode(otherlv_1, grammarAccess.getTextAccess().getTextKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTextAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getTextAccess().getColonKeyword_3());
		}
		(
			(
				(
					lv_h1_4_0='#'
					{
						newLeafNode(lv_h1_4_0, grammarAccess.getTextAccess().getH1NumberSignKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTextRule());
						}
						setWithLastConsumed($current, "h1", true, "#");
					}
				)
			)
			    |
			(
				(
					lv_h2_5_0='##'
					{
						newLeafNode(lv_h2_5_0, grammarAccess.getTextAccess().getH2NumberSignNumberSignKeyword_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTextRule());
						}
						setWithLastConsumed($current, "h2", true, "##");
					}
				)
			)
			    |
			(
				(
					lv_h3_6_0='###'
					{
						newLeafNode(lv_h3_6_0, grammarAccess.getTextAccess().getH3NumberSignNumberSignNumberSignKeyword_4_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTextRule());
						}
						setWithLastConsumed($current, "h3", true, "###");
					}
				)
			)
		)?
		this_STRING_7=RULE_STRING
		{
			newLeafNode(this_STRING_7, grammarAccess.getTextAccess().getSTRINGTerminalRuleCall_5());
		}
	)
;

// Entry rule entryRuleImage
entryRuleImage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageRule()); }
	iv_ruleImage=ruleImage
	{ $current=$iv_ruleImage.current; }
	EOF;

// Rule Image
ruleImage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Image'
		{
			newLeafNode(otherlv_0, grammarAccess.getImageAccess().getImageKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getImageAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getImageAccess().getColonKeyword_2());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImageRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getImageAccess().getLinkLinkCrossReference_3_0_0());
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getImageAccess().getNewlinkLinkParserRuleCall_3_1_0());
					}
					lv_newlink_4_0=ruleLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImageRule());
						}
						set(
							$current,
							"newlink",
							lv_newlink_4_0,
							"org.xtext.example.mydsl.HTMLbuild.Link");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	iv_ruleLink=ruleLink
	{ $current=$iv_ruleLink.current; }
	EOF;

// Rule Link
ruleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Link'
		{
			newLeafNode(otherlv_0, grammarAccess.getLinkAccess().getLinkKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLinkAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getLinkAccess().getColonKeyword_2());
		}
		(
			(
				(
					lv_address_3_0=RULE_STRING
					{
						newLeafNode(lv_address_3_0, grammarAccess.getLinkAccess().getAddressSTRINGTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLinkRule());
						}
						setWithLastConsumed(
							$current,
							"address",
							lv_address_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLinkRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getLinkAccess().getAnchorContentCrossReference_3_1_0());
					}
				)
			)
		)
		(
			otherlv_5='linktext'
			{
				newLeafNode(otherlv_5, grammarAccess.getLinkAccess().getLinktextKeyword_4_0());
			}
			(
				(
					lv_linktext_6_0=RULE_STRING
					{
						newLeafNode(lv_linktext_6_0, grammarAccess.getLinkAccess().getLinktextSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLinkRule());
						}
						setWithLastConsumed(
							$current,
							"linktext",
							lv_linktext_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getElementAccess().getContentParserRuleCall_0_0());
			}
			this_Content_0=ruleContent
			{
				$current = $this_Content_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getElementAccess().getDivParserRuleCall_0_1());
			}
			this_Div_1=ruleDiv
			{
				$current = $this_Div_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getElementAccess().getElemContentCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDiv
entryRuleDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDivRule()); }
	iv_ruleDiv=ruleDiv
	{ $current=$iv_ruleDiv.current; }
	EOF;

// Rule Div
ruleDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_div_id_0_0=RULE_ID
				{
					newLeafNode(lv_div_id_0_0, grammarAccess.getDivAccess().getDiv_idIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDivRule());
					}
					setWithLastConsumed(
						$current,
						"div_id",
						lv_div_id_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDivAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDivAccess().getDivelementsElementParserRuleCall_2_0());
				}
				lv_divelements_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDivRule());
					}
					add(
						$current,
						"divelements",
						lv_divelements_2_0,
						"org.xtext.example.mydsl.HTMLbuild.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDivAccess().getSeparatorsSeparatorParserRuleCall_3_0_0());
					}
					lv_separators_3_0=ruleSeparator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDivRule());
						}
						add(
							$current,
							"separators",
							lv_separators_3_0,
							"org.xtext.example.mydsl.HTMLbuild.Separator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDivAccess().getDivelementsElementParserRuleCall_3_1_0());
					}
					lv_divelements_4_0=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDivRule());
						}
						add(
							$current,
							"divelements",
							lv_divelements_4_0,
							"org.xtext.example.mydsl.HTMLbuild.Element");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getDivAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSeparator
entryRuleSeparator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSeparatorRule()); }
	iv_ruleSeparator=ruleSeparator
	{ $current=$iv_ruleSeparator.current; }
	EOF;

// Rule Separator
ruleSeparator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSeparatorAccess().getNextParserRuleCall_0());
		}
		this_Next_0=ruleNext
		{
			$current = $this_Next_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSeparatorAccess().getThenParserRuleCall_1());
		}
		this_Then_1=ruleThen
		{
			$current = $this_Then_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNext
entryRuleNext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNextRule()); }
	iv_ruleNext=ruleNext
	{ $current=$iv_ruleNext.current; }
	EOF;

// Rule Next
ruleNext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNextAccess().getNextAction_0(),
					$current);
			}
		)
		otherlv_1='<next'
		{
			newLeafNode(otherlv_1, grammarAccess.getNextAccess().getNextKeyword_1());
		}
		(
			(
				(
					lv_hasratio_2_0='('
					{
						newLeafNode(lv_hasratio_2_0, grammarAccess.getNextAccess().getHasratioLeftParenthesisKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNextRule());
						}
						setWithLastConsumed($current, "hasratio", true, "(");
					}
				)
			)
			(
				(
					(
						lv_ratios_3_0=RULE_INT
						{
							newLeafNode(lv_ratios_3_0, grammarAccess.getNextAccess().getRatiosINTTerminalRuleCall_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNextRule());
							}
							addWithLastConsumed(
								$current,
								"ratios",
								lv_ratios_3_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
				otherlv_4='/'
				{
					newLeafNode(otherlv_4, grammarAccess.getNextAccess().getSolidusKeyword_2_1_1());
				}
			)?
			(
				(
					lv_ratios_5_0=RULE_INT
					{
						newLeafNode(lv_ratios_5_0, grammarAccess.getNextAccess().getRatiosINTTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNextRule());
						}
						addWithLastConsumed(
							$current,
							"ratios",
							lv_ratios_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getNextAccess().getRightParenthesisKeyword_2_3());
			}
		)?
		otherlv_7='>'
		{
			newLeafNode(otherlv_7, grammarAccess.getNextAccess().getGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleThen
entryRuleThen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThenRule()); }
	iv_ruleThen=ruleThen
	{ $current=$iv_ruleThen.current; }
	EOF;

// Rule Then
ruleThen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getThenAccess().getThenAction_0(),
					$current);
			}
		)
		otherlv_1='<then'
		{
			newLeafNode(otherlv_1, grammarAccess.getThenAccess().getThenKeyword_1());
		}
		(
			(
				(
					lv_hasratio_2_0='('
					{
						newLeafNode(lv_hasratio_2_0, grammarAccess.getThenAccess().getHasratioLeftParenthesisKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getThenRule());
						}
						setWithLastConsumed($current, "hasratio", true, "(");
					}
				)
			)
			(
				(
					(
						lv_ratios_3_0=RULE_INT
						{
							newLeafNode(lv_ratios_3_0, grammarAccess.getThenAccess().getRatiosINTTerminalRuleCall_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getThenRule());
							}
							addWithLastConsumed(
								$current,
								"ratios",
								lv_ratios_3_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
				otherlv_4='/'
				{
					newLeafNode(otherlv_4, grammarAccess.getThenAccess().getSolidusKeyword_2_1_1());
				}
			)?
			(
				(
					lv_ratios_5_0=RULE_INT
					{
						newLeafNode(lv_ratios_5_0, grammarAccess.getThenAccess().getRatiosINTTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getThenRule());
						}
						addWithLastConsumed(
							$current,
							"ratios",
							lv_ratios_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getThenAccess().getRightParenthesisKeyword_2_3());
			}
		)?
		otherlv_7='>'
		{
			newLeafNode(otherlv_7, grammarAccess.getThenAccess().getGreaterThanSignKeyword_3());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
