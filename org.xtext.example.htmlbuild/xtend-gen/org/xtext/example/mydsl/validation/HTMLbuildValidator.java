/**
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.validation;

import org.eclipse.emf.common.util.EList;
import org.eclipse.xtext.validation.Check;
import org.xtext.example.mydsl.hTMLbuild.Separator;
import org.xtext.example.mydsl.validation.AbstractHTMLbuildValidator;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class HTMLbuildValidator extends AbstractHTMLbuildValidator {
  @Check
  public void checkSeparatorRatio(final Separator separator) {
    boolean _isHasratio = separator.isHasratio();
    if (_isHasratio) {
      int ratio_sum = 0;
      int _size = separator.getRatios().size();
      boolean _greaterThan = (_size > 1);
      if (_greaterThan) {
        this.warning("Separator has 2 Ratios (this is usually only the first Separator).", null);
      }
      EList<Integer> _ratios = separator.getRatios();
      for (final Integer ratio : _ratios) {
        {
          if (((ratio.intValue() > 100) || (ratio.intValue() < 0))) {
            this.error("Separator Ratios must be between [0,100]%.", null);
          }
          int _ratio_sum = ratio_sum;
          int _intValue = ratio.intValue();
          ratio_sum = (_ratio_sum + _intValue);
        }
      }
      if ((ratio_sum > 100)) {
        this.error("Ratios > 100%.", null);
      }
    }
  }
}
